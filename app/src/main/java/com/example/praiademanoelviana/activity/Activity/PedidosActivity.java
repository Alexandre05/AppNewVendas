package com.example.praiademanoelviana.activity.Activity;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import android.app.AlertDialog;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.Toast;import com.example.praiademanoelviana.R;import com.example.praiademanoelviana.activity.Adpter.AdapterPedido;import com.example.praiademanoelviana.activity.Adpter.AdapterProduto;import com.example.praiademanoelviana.activity.Helper.ConfiruFirebase;import com.example.praiademanoelviana.activity.Helper.UsuarioFirebase;import com.example.praiademanoelviana.activity.lister.RecyclerItemClickListener;import com.example.praiademanoelviana.activity.model.Pedido;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.Query;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;import dmax.dialog.SpotsDialog;public class PedidosActivity extends AppCompatActivity {private RecyclerView RecyPedidos;private AdapterPedido adapterPedido;    private List<Pedido> pedidos= new ArrayList<>();    private AlertDialog dialog;    private  DatabaseReference firebaseRef;    private  String idEmpresa;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_pedidos);        // configura iniciais        iniciaarComponentes(); firebaseRef= ConfiruFirebase.getFirebase(); idEmpresa= UsuarioFirebase.getIdUsuario();        Toolbar toolbar = findViewById(R.id.toolbarNova);        toolbar.setTitle("Pedidos");        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        //configura recycle        RecyPedidos.setLayoutManager(new LinearLayoutManager(this));        RecyPedidos.setHasFixedSize(true);        adapterPedido = new AdapterPedido(pedidos);        RecyPedidos.setAdapter(adapterPedido);        recuperarPedidos();        // adiciona evento de clique        RecyPedidos.addOnItemTouchListener(                new RecyclerItemClickListener(this,                        RecyPedidos,                        new RecyclerItemClickListener.OnItemClickListener() {                            @Override                            public void onItemClick(View view, int position) {                            }                            @Override                            public void onLongItemClick(View view, int position) {                                 Pedido pedido= pedidos.get(position);                                 pedido.setStatus("finalizado");                                 pedido.atualizarStatus();                            }                            @Override                            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {                            }                        })        );    }    private void recuperarPedidos() {        dialog = new SpotsDialog.Builder()                .setContext(this)                .setMessage("Carregando dados")                .setCancelable( false )                .build();        dialog.show();        DatabaseReference pedidoRef = firebaseRef                .child("pedidos")                .child(idEmpresa);        Query pedidoPesquisa = pedidoRef.orderByChild("status")        .equalTo("confirmado");        pedidoPesquisa.addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(DataSnapshot dataSnapshot) {                pedidos.clear();                if(dataSnapshot.getValue()!=null){           for (DataSnapshot ds: dataSnapshot.getChildren()){   Pedido pedido = ds.getValue(Pedido.class);   pedidos.add(pedido);           }                    adapterPedido.notifyDataSetChanged();                    dialog.dismiss();                }else{                        Toast.makeText(PedidosActivity.this,                                "Sem Novos Pedidos",                                Toast.LENGTH_SHORT).show();                        dialog.dismiss();                    //setContentView(R.layout.activity_empresa);                }            }            @Override            public void onCancelled(DatabaseError databaseError) {            }        });    }    private  void iniciaarComponentes(){RecyPedidos = findViewById(R.id.recylerPedidos);    }}